@use 'sass:list';
@import "../global-settings.scss";

@mixin transition($props: (), $setting: $hover-setting) {
    $transition: '';
    @each $prop in $props {
      @if length($transition) > 0 {
        $transition: #{$transition}, #{$prop} #{$setting};
      } @else {
        $transition: #{$prop};
      }
    }
    transition: $transition;
};

@mixin box-shadow($shadow...) {
    box-shadow: $shadow;
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
}


@mixin gradient($direction, $colors...) {
  $gradient: '';
  
  @each $entry in $colors {
    $color-value: nth($entry, 1); // Extract the color
    $spread-value: if(length($entry) > 1, nth($entry, 2), null);

    @if $spread-value != null {
      $color-value: #{$color-value} #{$spread-value};
    }

    @if length($gradient) > 0 {
      $gradient: #{$gradient}, #{$color-value};
    } @else {
      $gradient: #{$color-value};
    }
  }

  background: linear-gradient($direction, $gradient);
}



@mixin glow($gradient: () ,$border: null, $glow: null) {
  $gradientValue: '';
  @each $entry in $gradient {
    @if length($entry) > 0 {
      $color-value: nth($entry, 1);
      $spread-value: if(length($entry) > 1, nth($entry, 2), null);
  
      @if $spread-value != null {
        $color-value: #{$color-value} #{$spread-value};
      }
  
      @if length($gradientValue) > 0 {
        $gradientValue: #{$gradientValue}, #{$color-value};
      } @else {
        $gradientValue: #{$color-value};
      }
    }
  }
  
  background: radial-gradient(circle at center, $gradientValue);

  @if $border != null {
    border: $border
  }

  $box-shadow: '';

  @each $entry in $glow {
    @if length($box-shadow) > 0 {
      $box-shadow: #{$box-shadow}, #{$entry};
    } @else {
      $box-shadow: #{$entry};
    }
  }

  @if length($box-shadow) > 0 {
    box-shadow: $box-shadow;
  }
}

